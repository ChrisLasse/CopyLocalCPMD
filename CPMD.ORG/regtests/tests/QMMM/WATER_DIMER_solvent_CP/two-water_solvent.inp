# $Id: two-water_solvent.inp 686 2006-09-20 10:31:01Z qmmm $
TITLE
  water dimer (1 solute, 1 solvent)
END
#MINIMISE
#    NTEM 
#    =1 use steepest descent minimising
#    =2 use conjugate gradient (CG) minimisation
#    NCYC > 0 resetting of search direction (CG)
#    DELE >= 0.0 energy threshold for stopping
#    DX0 >= 0.0 initial step size
#    DXM >= 0.0 maximum step size
#     NTEM    NCYC    DELE    DX0     DXM
#         1     50     0.000001  0.001   0.003
#END
#STOCHASTIC
#     NTFR
#     0 = set to zero
#     1 = set to CFRIC
#     2 = set to CFRIC*GAM
#     3 = calculate using SUBR. FRIC
#      NTFR     NSFR     NBREF  RCUTF    CFRIC    TEMPSD
#        3      300         6   0.3      91.0     300.0
#END
SYSTEM
#     NPM >= 0 number of (identical) solute molecules
#     NSM >= 0 number of (identical) solvent molecules
#      NPM      NSM 
       1        1
END
START
#     NTX 1..3 reading/generation of initial 3D coordinates (X),
#     3D velocities (V), and stochastic integrals (SX)
#     action                                  1    2    3  
#     read X from IOXVI (21)                  yes  yes  yes
#     set V to zero if TEMPI = 0.0            yes  no   no 
#     read V from IOXVI (21) if  TEMPI = 0.0  no   yes  yes
#     read SX from IOXVI (21)                 no   no   yes
#
#     INIT 1..4 startup configuration
#     action          1      2    3    4
#     shake X        yes     no   no   no
#     shake V        yes     yes  no   no
#     C.O.M removal  yes     yes  yes  no
#     if NTCM =1
#      NTX     INIT      IG     TEMPI      HEAT  NTXO   BOLTZ
         1        4  210185       0.0   0.00000     1   8.31441E-3
END
STEP
#     NSTLIM > 0 total number of steps
#     T >= 0.0 time at beginning of simulation
#     DT >= 0.0 time step of simulations
#      NSTLIM         T        DT
       500000    000.00   0.00050
END
BOUNDARY
#     NTB -2..2 define boundary conditions
#     <0 truncated octahedron periodic boundary conditions
#     >0 rectangular/monoclinic periodic boundary conditions
#     0 vacuum
#     abs(NTB) = 2 the virial (pressure) is calculated
#     BOX(1..3) > 0.0 periodic box dimensions
#     BETA > 0.0 angle of box (inclination between x- and z- axes)
#     in degrees
#     BETA must be 90.0 degrees if abs(NTB) = 2 or if NTB<0
#     NRDBOX 0,1 controls reading of BOX dimensions
#     0 use the box dimensions from the BOUNDARY block
#     1 read box dimensions from startup file (BOX) IOXVI (21)
#      NTB    BOX(1)    BOX(2)    BOX(3)      BETA  NRDBOX
         0       10       10       10         90      0
END
SUBMOLECULES
#     NSPM > 0 number of (sub)molecules the solute consists of
#     NSP(1.. NSPM) > 0 atom sequence number in topology of last atom in
#     submolecule I
#      NSPM  NSP(1.. NSPM)
       1       3   
END
TCOUPLE
#     NTT(1) -3..3 controls temperature coupling of solute
#     internal and rotational degrees of freedom ( d.o.f.) in three dimensions
#     NTT(2) -3..3 controls temperature coupling of solute 
#     centre of mass translational d.o.f. in three dimensions
#     NTT(3) -3..3 controls temperature coupling of solvent d.o.f.
#     in three dimensions
#     0 no temperature coupling for set of d.o.f.
#     1 couple one set of d.o.f. to one bath
#     2,-2 couple two sets of d.o.f. to one bath (+ sign)
#     -3,3 couple three sets of d.o.f. to one bath (+ sign)
#     TEMP0 >= 0.0 bath reference temperature
#     TAUT >= 0.0 coupling time 
#      NTT     TEMP0      TAUT
         3       5.0     5.500
        -3       5.0     5.500
        -3       5.0     5.500
END
#PCOUPLE
#     NTP 0,1,2 controls pressure coupling
#     0 no pressure coupling
#     1 isotropic pressure scaling
#     2 anisotropic pressure scaling (x-, y-, z- axes)
#     PRES0 > 0.0 reference pressure
#     COMP > 0.0 isothermal compressibility
#     TAUP > 0.0 coupling time
#     pressure coupling requires calculation of the virial 
#     (see BOUNDARY)
#      NTP     PRES0      COMP      TAUP  
#        1  0.061020  4.575E-4   0.50000
#END
CENTREOFMASS
#     NDFMIN >= 0 number of degrees of freedom to subtract from total
#     when calculating the system temperature
#     NTCM 0,1 controls initial centre of mass motion removal
#     0 no initial centre of mass motion removal
#     1 inital centre of mass motion is removed
#     NSCM >= 0 controls centre of mass motion removal during
#     simulation
#     0 no centre of mass motion removal
#     > 0 centre of mass motion removal every NSCM steps
#      NDFMIN      NTCM      NSCM
            0         0       100
END
PRINT
#     NTPR: print out energies, etc. every NTPR steps
#     NTPL: print out C.O.M motion and total energy fitting every NTPL steps
#     NTPP: =1 perform dihedral angle transition monitoring
#      NTPR      NTPL      NTPP
         25      1000         0

END
WRITE
#     NTPW = 0 : binary
#     NTPW = 1 : formatted
#     NTWSE = configuration selection parameter
#     =0: write normal trajectory
#     >0: chose min energy for writing configurations
#      NTWX     NTWSE      NTWV      NTWE      NTWG      NTPW
         20         0      5000         1         0         1
END
SHAKE
#     NTC 1,2,3 controls use of SHAKE for the solute
#     1 no shake is performed (solute)
#     2 SHAKE the bonds involving hydrogens (solute)
#     3 SHAKE all bonds (solute)
#     TOL > 0.0 SHAKE tolerance (relative geometric precision), for
#     solute and solvent
#      NTC       TOL
         1   0.0000010
END
FORCE
#     NTF(I)=0 do not use term I
#     NTF(I)=1 use term I
#     NTF(1) bonds involving hydrogens
#     NTF(2) bonds not involving hydrogens
#     NTF(3) bond angles involving hydrogens
#     NTF(4) bond angles not involving hydrogens
#     NTF(5) improper dihedrals involving hydrogens
#     NTF(6) improper dihedrals not involving hydrogens
#     NTF(7) dihedrals involving hydrogens
#     NTF(8) dihedrals not involving hydrogens
#     NTF(9) nonbonded charge interactions
#     NTF(10) nonbonded interactions
#     NEGR >= 0 number of energy groups
#     NRE > 0 last atoms in each energy group
#     NRE values must be in ascending order
#      bonds    angles    imp.     dihe     charge nonbonded
#      H        H         H        H
       1  1     1  1      1  1     1  1     1  1
#      NEGR    NRE(1)    NRE(2)    ...      NRE(NEGR)
          2        3         6
END
PLIST
#     NTNB 0,1 controls pairlist construction before the first step
#     0 no pairlist is constructed before the first step
#     1 a pairlist is constructed before the first step
#     NSNB > 0 controls frequency (number of steps) a pairlist is
#     constructed
#     RCUTP > 0.0 cut-off used in pairlist construction
#     RCUTL > 0.0 cut-off used in long range interaction
#      NTNB      NSNB     RCUTP     RCUTL
          1      1000       3.0       4.0
END
LONGRANGE
#     EPSRF =0.0,or >= 1.0 eps used in reaction-field calculation
#     APPAK >= 0.0 kappa used in reaction-field calculation
#     RCRF > 0.0 cut-off radius used in reaction-field calculation
#      EPSRF     APPAK      RCRF
         1.0       0.0       1.0E15
END
LATSUM
# 32 is the ewald grid, 64 is a more conservative choice.o
# 0.7 is the size of the head function for ewald summations
       2       32     32    32       0         0.7    1.33    140000
END

#
POSREST
#     values for NTR
#     0: no position re(con)straining
#     1: use CHO
#     2: use CHO/ ATOMIC B-FACTORS
#     3: position constraining
#      NTR       CHO   NRDRX
         0      1000      0
END
#
#DISTREST
#     NTDR
#     0 : no distance restraining
#     -1,1 : use CDIS
#     -2,2:  use W0*CDIS
#     NTDR < 0 : time averaging
#     NTDR > 0 : no time averaging
# NRDDR = 1: read in time averaged distances (for continuation run)
# NRDDR = 0: don't read them in, recalc from scratch
#     NTDR      CDIS       DR0     TAUDR     NRDDR
#        0    1000.0   1.00000      10.0         0
#END
#DIHEREST
# values for NTDLR
# 0: no dihedral angle restraining
# 1: use CDLR
# 2: use CDLR * CPLR
#    NTDLR      CDLR
#        0       0.1
#END
#J-VAL
# values for NTJR
#     0: no J-value restraining
#     -1,1: use CJR*(a*cos^^2 + b*cos + c)
#     -2,2: use CJR*CPJR*(a*cos^^2 + b*cos + c)
#     NTJR < 0: time averaging
#     NTJR > 0: no time averaging
#---
# values for NTJRH
#    0: use half harmonic potential
#    1: use harmonic potential
# values for NRDJR
#    0: start from initial values
#    1: read in time averages (for continuation run)
#     NTJR     NTJRH       CJR     TAUJR     NRDJR
#        0         1      10.0      10.0         0 
#END
#---------
#LOCALELEVATION
# NTLE
# 0: off
# 1: gaussian potential energy function
# 2: inverse quadratic energy fuction
#--
# NRDLE
# 0: don't read in memory
# 1: read in memory (for continuation run)
#   NTLE   CWLE  NRDLE
#      0    2.5      0
#END
#---------
#FOURDIM
#  NT4DIM	meaning
#	0	perform 3D simulation
#	>0	perform 4D simulation
#	1	use CW4DA
#	2	use CW4DA*C4D
#---
# NT4XI determines initial coordinates and
# velocities in the 4'th dimension
#		init coords	init velocities
#	1	0		max dist
#	2	boltz		set to 0
#	3	read coords	max dist
#	4	read coords and velocities from unit 'XVI' (for continuation run)
#---
# NT4XO : 1 write out 4'th dimensional data to trajectory
#       : 0 write out only 3 dimensions to trajectory
#---
#  NT4DIM	CW4DA	TEMP4I	NDFMI4   NT4XI NT4XO
#       0      5000.0     30.0	     0       1     0
#------
# temperature coupling in the 4'th dimension
#    NTT4      TEMP04	  TAUT4
#       1        30.0   0.10000
# NTCW4D 0: constant reference temperature and using CW4DA as force constant
# 1: reference temperature is linearly changed from TEMP04 to TEMP0B,
#    force constant is changed from CW4DA to CW4DB over NSTLIM steps.
#  NTCW4D	CW4DB    TEMP0B
#       0        10.0     300.0
# NTF4: 4D force terms: 0 = perform in 3D, 1 = perform in 4D
#     	bond/shake
#               bond angle
#                       dihedral
#                               non-bonded
#                                   	dist rest
#                                      		4d harm osc
#       0       0       0       1       0       1
#END
#PERTURB
# NTG: 0 no perturbation is applied
#    : 1 calculate dV/dRLAM perturbation
#    : 2 calculate dV/dRMU perturbation
#    : 3 calculate both derivatives
#      NTG     NRDGL     RLAM     DLAMT        RMU   DMUT
#        0         0      0.5   0.00000    0.00000   0.00
#   ALPHLJ     ALPHC     NLAM       MMU
#      2.0      25.0        1         1
#END
#-------
#PATHINT
# restrictions for PI
# topology must contain bead information
# pathint in 4D is disabled
# pathint and perturbation not allowed
# a warning is written out if the temperature at discretization
# is not the same as the MD run is performed at.
#
# values or NTPI
#     0: no path integral calculation
#     1: path integral calculation
#---
# NTPI
#    0
#END



