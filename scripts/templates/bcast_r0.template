subroutine mp_bcast_${NAME}(data, root,comm)
  ! Arguments
#ifdef __PARALLEL
  integer, intent(in) ::  root
  type(MPI_COMM), intent(in) :: comm
#else
  integer, intent(in) ::  root,comm
#endif
  ${TYPE}${KIND}, intent(inout)  :: data
  ! Variables
  integer :: ierr
  character(*),parameter :: procedureN='mp_bcast_${NAME}'
#ifdef __PARALLEL
  real(real_8) :: tim1,tim2
  cmcal(ipar_cast)=cmcal(ipar_cast)+1.0d0
  cmlen(ipar_cast)=cmlen(ipar_cast)+${MPI_LEN}*${SIZE_IN_BYTES}
  tim1=m_walltime()      
  call mpi_bcast(data,${MPI_LEN},${MPI_TYPE},root,comm,ierr)
  call mp_mpi_error_assert(ierr,procedureN,__LINE__,__FILE__)
  tim2=m_walltime()
  cmtim(ipar_cast)=cmtim(ipar_cast)+tim2-tim1
#endif
end subroutine mp_bcast_${NAME}
