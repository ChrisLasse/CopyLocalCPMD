subroutine mp_sum_root_${NAME}(data_in,data_out,${ARG_LEN_NAME} root, comm)
#ifdef __PARALLEL
  use mpi
#endif
  ! Arguments
  integer, intent(in) :: ${ARG_LEN_NAME} root, comm
  ${TYPE}${KIND}, intent(in) ${DIMENSION} :: data_in
  ${TYPE}${KIND}, intent(inout) ${DIMENSION} :: data_out
  ! Variables
  character(*),parameter :: procedureN='mp_sum_root_${NAME}'
#ifdef __PARALLEL
  integer :: ierr
  real(real_8) :: tim1,tim2
  cmcal(ipar_gsum)=cmcal(ipar_gsum)+1.0d0
  cmlen(ipar_gsum)=cmlen(ipar_gsum)+${MPI_LEN}*${SIZE_IN_BYTES}
  tim1=m_walltime()      
  call mpi_reduce(data_in,data_out,${MPI_LEN},${MPI_TYPE},&
       MPI_SUM,root,comm,ierr)
  call mp_mpi_error_assert(ierr,procedureN,__LINE__,__FILE__)
  tim2=m_walltime()
  cmtim(ipar_gsum)=cmtim(ipar_gsum)+tim2-tim1
#else
  data_out ${COPY}=data_in ${COPY}
#endif
end subroutine mp_sum_root_${NAME}
