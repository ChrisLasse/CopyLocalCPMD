Index: src/rv30_utils.mod.F90
===================================================================
--- src/rv30_utils.mod.F90	(revision 4632)
+++ src/rv30_utils.mod.F90	(revision 4633)
@@ -1630,36 +1630,36 @@
           ENDIF
           irecord = 0
        ENDIF
-    ENDIF
-    IF (irecord.NE.0) THEN
-       IF(ALLOCATED(hesscr)) THEN
-          DEALLOCATE(hesscr,STAT=ierr)
-          IF(ierr/=0) CALL stopgm(procedureN,'deallocation problem',&
+       IF (irecord.NE.0) THEN
+          IF(ALLOCATED(hesscr)) THEN
+             DEALLOCATE(hesscr,STAT=ierr)
+             IF(ierr/=0) CALL stopgm(procedureN,'deallocation problem',&
+                  __LINE__,__FILE__)
+          ENDIF
+          ALLOCATE(hesscr(nvar,nvar),STAT=ierr)
+          IF(ierr/=0) CALL stopgm(procedureN,'allocation problem',&
                __LINE__,__FILE__)
-       ENDIF
-       ALLOCATE(hesscr(nvar,nvar),STAT=ierr)
-       IF(ierr/=0) CALL stopgm(procedureN,'allocation problem',&
-            __LINE__,__FILE__)
-       nshess = 0
-       lallhs = .FALSE.
-       IF (paral%io_parent) THEN
-          k=0
-          DO i=1,nvar
-             READ(nr) (hesscr(j+k,1),j=1,nvar)! if NVAR is set here
-             k=k+nvar
-          ENDDO
-          READ(nr) nshess, lvlhes
-          IF (.NOT.lvlhes) THEN
-             IF (nshess.GT.0 .AND. MOD(nshess,2).EQ.0) THEN
-                nshess = nshess - 1
-                lundop = .TRUE.
-                WRITE(6,'(A,A,I3)') ' RV30| WARNING! ',&
-                     'INCOMPLETE HESSIAN, REDOING DIMENSION ',&
-                     nshess/2+1
-             ELSE
-                WRITE(6,'(A,A,I3)') ' RV30| WARNING! ',&
-                     'INCOMPLETE HESSIAN, DOING DIMENSION ',&
-                     nshess/2+1
+          nshess = 0
+          lallhs = .FALSE.
+          IF (paral%io_parent) THEN
+             k=0
+             DO i=1,nvar
+                READ(nr) (hesscr(j+k,1),j=1,nvar)! if NVAR is set here
+                k=k+nvar
+             ENDDO
+             READ(nr) nshess, lvlhes
+             IF (.NOT.lvlhes) THEN
+                IF (nshess.GT.0 .AND. MOD(nshess,2).EQ.0) THEN
+                   nshess = nshess - 1
+                   lundop = .TRUE.
+                   WRITE(6,'(A,A,I3)') ' RV30| WARNING! ',&
+                        'INCOMPLETE HESSIAN, REDOING DIMENSION ',&
+                        nshess/2+1
+                ELSE
+                   WRITE(6,'(A,A,I3)') ' RV30| WARNING! ',&
+                        'INCOMPLETE HESSIAN, DOING DIMENSION ',&
+                        nshess/2+1
+                ENDIF
              ENDIF
           ENDIF
        ENDIF
Index: src/meta_colvar_utils.mod.F90
===================================================================
--- src/meta_colvar_utils.mod.F90	(revision 4632)
+++ src/meta_colvar_utils.mod.F90	(revision 4633)
@@ -153,8 +153,9 @@
     ! ==--------------------------------------------------------------==
     ionode=paral%io_parent
     IF (tmw) ionode=grandparent
+    !TK bugfix: FINAL needs to be initialized on all procs!
+    FINAL = .FALSE.
     IF (.NOT.ionode) GOTO 9999
-    FINAL = .FALSE.
 
     ! TODO align for BG
     ALLOCATE(f_hill(cotc0%nodim),STAT=ierr)
Index: src/mltfft_utils.mod.F90
===================================================================
--- src/mltfft_utils.mod.F90	(revision 4632)
+++ src/mltfft_utils.mod.F90	(revision 4633)
@@ -508,11 +508,7 @@
     INTEGER                                  :: fftw_dir, fftw_flags, i, j
     LOGICAL                                  :: tscal
 
-#if defined(__PRIMEHPC)
-    INTEGER(int_8) :: plan
-#else
-    INTEGER :: plan
-#endif
+    TYPE(C_PTR) :: plan
 #if defined(__HAS_FFT_FFTW3)
     tscal=(ABS(scale-1._real_8).GT.1.e-12_real_8)
     IF (isign.EQ.1) THEN
Index: src/dist_prowfn_utils.mod.F90
===================================================================
--- src/dist_prowfn_utils.mod.F90	(revision 4632)
+++ src/dist_prowfn_utils.mod.F90	(revision 4633)
@@ -1441,55 +1441,52 @@
 ! NEW VARIABLES
 ! ==--------------------------------------------------------------==
 
-    msweep=numorb/8
-    IF (MOD(numorb,8).NE.0) msweep=msweep+1
-    ! ALLOCATE LOCAL MEMORY
-    ALLOCATE(lxxmat(nattot,8),STAT=ierr)
-    IF(ierr/=0) CALL stopgm(procedureN,'allocation problem',&
-         __LINE__,__FILE__)
-    DO isw=1,msweep
-       IF (paral%io_parent)&
-            CALL fileopen(41,'WFNCOEF',fo_def+fo_ufo,ferror)
-       IF (paral%io_parent)&
-            READ(41) lnattot,ions1%nsp,(ions0%zv(is),ions0%na(is),numaor(is),is=1,ions1%nsp)
-       i1=(isw-1)*8+1
-       i2=MIN(8*isw,numorb)
-       ! LOAD XXMAT(*,I1:I2) PART FROM FILE TO LXXMAT
-       DO k=1, nattot
-          is = 1
-          DO l=1, numorb
-             IF (paral%io_parent)&
-                  READ(41) tmp
-             IF ((l.GE.i1).AND.(l.LE.i2)) THEN
-                lxxmat(k,is) = tmp
-                is = is +1
-             ENDIF
+    !TK Bug fix: tmp only defined on io_parent...
+    !io_parent only does something here anyway - move io_parent to the
+    !very beginning
+    IF(paral%io_parent)THEN
+       msweep=numorb/8
+       IF (MOD(numorb,8).NE.0) msweep=msweep+1
+       ! ALLOCATE LOCAL MEMORY
+       ALLOCATE(lxxmat(nattot,8),STAT=ierr)
+       IF(ierr/=0) CALL stopgm(procedureN,'allocation problem',&
+            __LINE__,__FILE__)
+       DO isw=1,msweep
+          CALL fileopen(41,'WFNCOEF',fo_def+fo_ufo,ferror)
+          READ(41) lnattot,ions1%nsp,(ions0%zv(is),ions0%na(is),numaor(is),is=1,ions1%nsp)
+          i1=(isw-1)*8+1
+          i2=MIN(8*isw,numorb)
+          ! LOAD XXMAT(*,I1:I2) PART FROM FILE TO LXXMAT
+          DO k=1, nattot
+             is = 1
+             DO l=1, numorb
+                READ(41) tmp
+                IF ((l.GE.i1).AND.(l.LE.i2)) THEN
+                   lxxmat(k,is) = tmp
+                   is = is +1
+                ENDIF
+             ENDDO
           ENDDO
+          CALL fileclose(41)
+          WRITE(6,'(/,A,8(I5,3X))') '      ORBITAL  ',(ii,ii=i1,i2)
+          WRITE(6,'(A,8(F7.3,1X))')&
+               '  COMPLETNESS  ',(comp(ii),ii=i1,i2)
+          WRITE(6,'(A,8(F7.3,1X),/)')&
+               '  OCCUPATION   ',(f(ii),ii=i1,i2)
+          ! DO IA=1,NATTOT
+          ! WRITE(6,'(A15,8(F7.3,1X))') LABEL(IA),
+          ! *                                   (XXMAT(IA,II),II=I1,I2)
+          DO ia=1,nattot
+             WRITE(6,'(A15,8(F7.3,1X))') label(ia),&
+                  (lxxmat(ia,ii),ii=1,8)
+          ENDDO
        ENDDO
-       IF (paral%io_parent)&
-            CALL fileclose(41)
-       IF (paral%io_parent)&
-            WRITE(6,'(/,A,8(I5,3X))') '      ORBITAL  ',(ii,ii=i1,i2)
-       IF (paral%io_parent)&
-            WRITE(6,'(A,8(F7.3,1X))')&
-            '  COMPLETNESS  ',(comp(ii),ii=i1,i2)
-       IF (paral%io_parent)&
-            WRITE(6,'(A,8(F7.3,1X),/)')&
-            '  OCCUPATION   ',(f(ii),ii=i1,i2)
-       ! DO IA=1,NATTOT
-       ! WRITE(6,'(A15,8(F7.3,1X))') LABEL(IA),
-       ! *                                   (XXMAT(IA,II),II=I1,I2)
-       DO ia=1,nattot
-          IF (paral%io_parent)&
-               WRITE(6,'(A15,8(F7.3,1X))') label(ia),&
-               (lxxmat(ia,ii),ii=1,8)
-       ENDDO
-    ENDDO
-    ! FREE LOCAL MEMORY
-    DEALLOCATE(lxxmat,STAT=ierr)
-    IF(ierr/=0) CALL stopgm(procedureN,'deallocation problem',&
-         __LINE__,__FILE__)
-    ! ==--------------------------------------------------------------==
+       ! FREE LOCAL MEMORY
+       DEALLOCATE(lxxmat,STAT=ierr)
+       IF(ierr/=0) CALL stopgm(procedureN,'deallocation problem',&
+            __LINE__,__FILE__)
+       ! ==--------------------------------------------------------------==
+    END IF
     RETURN
   END SUBROUTINE dist_prtmat
   SUBROUTINE give_scr_dist_prowfn(lprowfn,tag,norbx)
